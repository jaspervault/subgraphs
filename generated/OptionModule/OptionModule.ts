// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OptionPremiun extends ethereum.Event {
  get params(): OptionPremiun__Params {
    return new OptionPremiun__Params(this);
  }
}

export class OptionPremiun__Params {
  _event: OptionPremiun;

  constructor(event: OptionPremiun) {
    this._event = event;
  }

  get _orderType(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _orderID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _writer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _holder(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _premiumAsset(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OptionModule extends ethereum.SmartContract {
  static bind(address: Address): OptionModule {
    return new OptionModule("OptionModule", address);
  }
}

export class SubmitJvaultOrderCall extends ethereum.Call {
  get inputs(): SubmitJvaultOrderCall__Inputs {
    return new SubmitJvaultOrderCall__Inputs(this);
  }

  get outputs(): SubmitJvaultOrderCall__Outputs {
    return new SubmitJvaultOrderCall__Outputs(this);
  }
}

export class SubmitJvaultOrderCall__Inputs {
  _call: SubmitJvaultOrderCall;

  constructor(call: SubmitJvaultOrderCall) {
    this._call = call;
  }

  get _info(): SubmitJvaultOrderCall_infoStruct {
    return changetype<SubmitJvaultOrderCall_infoStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _writerSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _holderSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SubmitJvaultOrderCall__Outputs {
  _call: SubmitJvaultOrderCall;

  constructor(call: SubmitJvaultOrderCall) {
    this._call = call;
  }
}

export class SubmitJvaultOrderCall_infoStruct extends ethereum.Tuple {
  get orderType(): i32 {
    return this[0].toI32();
  }

  get writer(): Address {
    return this[1].toAddress();
  }

  get underlyingAssetType(): i32 {
    return this[2].toI32();
  }

  get holder(): Address {
    return this[3].toAddress();
  }

  get underlyingAsset(): Address {
    return this[4].toAddress();
  }

  get underlyingNftID(): BigInt {
    return this[5].toBigInt();
  }

  get underlyingAmount(): BigInt {
    return this[6].toBigInt();
  }

  get strikeAsset(): Address {
    return this[7].toAddress();
  }

  get strikeAmount(): BigInt {
    return this[8].toBigInt();
  }

  get recipient(): Address {
    return this[9].toAddress();
  }

  get liquidateMode(): i32 {
    return this[10].toI32();
  }

  get expirationDate(): BigInt {
    return this[11].toBigInt();
  }

  get premiumAsset(): Address {
    return this[12].toAddress();
  }

  get premiumFee(): BigInt {
    return this[13].toBigInt();
  }
}

export class SubmitOptionOrderCall extends ethereum.Call {
  get inputs(): SubmitOptionOrderCall__Inputs {
    return new SubmitOptionOrderCall__Inputs(this);
  }

  get outputs(): SubmitOptionOrderCall__Outputs {
    return new SubmitOptionOrderCall__Outputs(this);
  }
}

export class SubmitOptionOrderCall__Inputs {
  _call: SubmitOptionOrderCall;

  constructor(call: SubmitOptionOrderCall) {
    this._call = call;
  }

  get _info(): SubmitOptionOrderCall_infoStruct {
    return changetype<SubmitOptionOrderCall_infoStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _writerSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SubmitOptionOrderCall__Outputs {
  _call: SubmitOptionOrderCall;

  constructor(call: SubmitOptionOrderCall) {
    this._call = call;
  }
}

export class SubmitOptionOrderCall_infoStruct extends ethereum.Tuple {
  get strikeSelect(): i32 {
    return this[0].toI32();
  }

  get holder(): Address {
    return this[1].toAddress();
  }

  get liquidateSelect(): i32 {
    return this[2].toI32();
  }

  get writer(): Address {
    return this[3].toAddress();
  }

  get recipient(): Address {
    return this[4].toAddress();
  }

  get premiumSelect(): i32 {
    return this[5].toI32();
  }

  get underlyingAmount(): BigInt {
    return this[6].toBigInt();
  }

  get signature(): SubmitOptionOrderCall_infoSignatureStruct {
    return changetype<SubmitOptionOrderCall_infoSignatureStruct>(
      this[7].toTuple(),
    );
  }
}

export class SubmitOptionOrderCall_infoSignatureStruct extends ethereum.Tuple {
  get orderType(): i32 {
    return this[0].toI32();
  }

  get underlyingAsset(): Address {
    return this[1].toAddress();
  }

  get underlyingAssetType(): i32 {
    return this[2].toI32();
  }

  get underlyingNftID(): BigInt {
    return this[3].toBigInt();
  }

  get expirationDate(): BigInt {
    return this[4].toBigInt();
  }

  get total(): BigInt {
    return this[5].toBigInt();
  }

  get timestamp(): BigInt {
    return this[6].toBigInt();
  }

  get liquidateModes(): Array<i32> {
    return this[7].toI32Array();
  }

  get strikeAssets(): Array<Address> {
    return this[8].toAddressArray();
  }

  get strikeAmounts(): Array<BigInt> {
    return this[9].toBigIntArray();
  }

  get premiumAssets(): Array<Address> {
    return this[10].toAddressArray();
  }

  get premiumFees(): Array<BigInt> {
    return this[11].toBigIntArray();
  }
}
